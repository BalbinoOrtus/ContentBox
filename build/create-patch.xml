<?xml version="1.0"?>
<!-- ====================================================================== 
     ContentBox Modular CMS Build (www.gocontentbox.org)                                                               
     ====================================================================== -->
<project name="contentbox.create-patch" default="build" basedir="../">
	<description>
    	Build a new patch of ContentBox Modular CMS
    </description>
	
	<!-- Version: UPDATE ON EACH RELEASE AS NEEDED -->
	<property name="groupID"			value="ortussolutions" />
	<property name="contentbox.version"	value="3.0.0"/>
 	<property name="contentbox.slug"	value="contentbox"/>		
	
	<!-- Build Labels -->
	<tstamp prefix="start"/>
	<!-- Load Contrib Tasks -->
	<path id="cp">
		<fileset dir="build/lib">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<!-- Define Tasks -->
	<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="cp" />
	
	<!-- Init -->
	<target name="init" description="Init">
		<!-- Default environment check, if not passed via -Denvironment -->
		<condition property="environment" value="local">
			<not><isset property="environment" /></not>
		</condition>
		<if>
			<available file="build/build-${environment}.properties" />
			<then>
				<!-- Load env properties -->
				<echo>Loading properties from environment: ${environment}</echo>
				<loadproperties srcFile="build/build-${environment}.properties"/>
			</then>
		</if>
		<!-- Load root properties -->
		<echo>Loading base properties</echo>
		<loadproperties srcFile="build/build.properties"/>
		
		<!-- build number for patch, use what normal build uses -->
		<property file="${be.exports}/build.number"/>
		
		<!-- Cleanup patches -->
		<delete>
			<fileset dir="${dir.contentbox.exports}">
				<include name="contentbox-patch*" />
			</fileset>
		</delete>
		
		<!-- Get latest commit hash from repo and load it -->
		<exec executable="${git.executable}" outputproperty="patch.endgit">
			<arg value="log" />
			<arg value="-n" />
			<arg value="1" />
			<arg value='--pretty=format:%H' />
		</exec>

		<!-- Install Dependencies -->
		<exec executable="box" dir="${basedir}">
			<arg line="install production=true" />
		</exec>
	</target>
	
	<!--Build-->
	<target name="build" description="Build a new ContentBox patch release" depends="init">
      	<!-- Create patch structure according to version -->
		<mkdir dir="${dir.patches}/${contentbox.version}/patch"/>
		<delete file="${dir.patches}/${contentbox.version}/patch.zip"/>
		<delete file="${dir.patches}/${contentbox.version}/deletes.txt"/>
		
		<!-- Copy Update Template, just in case -->
		<copy file="${dir.resources}/Update.cfc" tofile="${dir.patches}/${contentbox.version}/Update.cfc" overwrite="false" encoding="UTF-8"/>
		
		<!-- ****************************************************************************************************** -->
		<!--  										BUILD PATCH 													-->
		<!-- ****************************************************************************************************** -->

		<!-- Execute git patch -->
		<exec executable="build/create-patch.sh">
	    	<arg value="${patch.startgit}"/>
	    	<arg value="${patch.endgit}"/>
	   	 	<arg value="${contentbox.version}"/>
			<arg value="${basedir}"/>
	  	</exec>
		
		<!--Unzip Patch To remove excludes -->
		<unzip src="${dir.patches}/${contentbox.version}/patch.zip" dest="${dir.patches}/${contentbox.version}/patch" overwrite="true">
			<patternset>
				<exclude name=".htaccess"/>
				<exclude name=".jshintrc"/>
				<exclude name="Application.cfc"/>
				<exclude name="box.json"/>
				<exclude name="build.number"/>
				<exclude name="config/"/>
				<exclude name="favicon.ico"/>
				<exclude name="build/**"/>
				<exclude name="handlers/**"/>
				<exclude name="includes/**"/>
				<exclude name="index.cfm"/>
				<exclude name="layouts/**"/>
				<exclude name="license.txt"/>
				<exclude name="models/**" />
				<exclude name="modules/contentbox-dsncreator/**"/>
				<exclude name="modules/contentbox-installer/**"/>
				<exclude name="readme.txt"/>
				<exclude name="readme.md"/>
				<exclude name="server.json"/>
				<exclude name="tests/"/>
				<exclude name="views/**"/>
		        <exclude name="workbench/**"/>
		        <exclude name="**/apidocs/**"/>
				<exclude name="${patch.excludes}"/>
		    </patternset>
		</unzip>
		
		<!-- Replace Build Numbers For Patch -->
		<replaceregexp match='@build.number@' replace="${build.number}" flags="ig" byline="true" encoding="UTF-8">
			<fileset dir="${dir.patches}/${contentbox.version}/patch">
				<include name="**/ModuleConfig.cfc" />
			</fileset>
		</replaceregexp>
		<!-- Replace Build Numbers -->
		<replaceregexp match='@version.number@' replace="${contentbox.version}" flags="ig" byline="true" encoding="UTF-8">
			<fileset dir="${dir.patches}/${contentbox.version}/patch">
				<include name="**/ModuleConfig.cfc" />
			</fileset>
		</replaceregexp>
		
		<!-- Delete original patch for cleanup -->
		<delete file="${dir.patches}/${contentbox.version}/patch.zip" />
		
		<!-- Incorporate Dependencies -->
		<copy todir="${dir.patches}/${contentbox.version}/patch/coldbox" encoding="UTF-8" overwrite="true">
			<fileset dir="coldbox">
				<exclude name="**/apidocs/**" />
				<exclude name="testbox/**" />
			</fileset>
		</copy>
		
		<!-- Zip now as excludes removed. -->
		<zip basedir="${dir.patches}/${contentbox.version}/patch" destfile="${dir.patches}/${contentbox.version}/patch.zip"/>
		
		<!-- Zip Bundle with DB updates plus file deletes+additions -->
		<zip destfile="${dir.contentbox.exports}/contentbox-patch-${contentbox.version}.zip" basedir="${dir.patches}/${contentbox.version}">
			<patternset>
		        <exclude name="patch/**"/>
		    </patternset>
		</zip>

		<!-- ****************************************************************************************************** -->
		<!--  										DB ONLY PATCH 													-->
		<!-- ****************************************************************************************************** -->

		<!-- Zip DB Updates Only Now -->
		<zip destfile="${dir.contentbox.exports}/contentbox-patch-db-${contentbox.version}.zip" basedir="${dir.patches}/${contentbox.version}">
			<include name="**/Update.cfc" />
		</zip>

		<!-- ****************************************************************************************************** -->
		<!--  										NO COLDBOX PATCH 												-->
		<!-- ****************************************************************************************************** -->
		
		<!-- Remove coldbox entries for non-coldbox patch -->
		<delete dir="${dir.patches}/${contentbox.version}/patch/coldbox" includeemptydirs="true"/>
		<delete file="${dir.patches}/${contentbox.version}/patch.zip" />
		<!-- Zip patch.zip -->
		<zip basedir="${dir.patches}/${contentbox.version}/patch" destfile="${dir.patches}/${contentbox.version}/patch.zip"/>
		<!-- Delete Patch unzipped Folder -->
		<delete dir="${dir.patches}/${contentbox.version}/patch" />
		<!-- Delete original deletes.txt to one without coldbox patch -->
		<delete file="${dir.patches}/${contentbox.version}/deletes.txt"/>
		<move file="${dir.patches}/${contentbox.version}/deletes-nocoldbox.txt" tofile="${dir.patches}/${contentbox.version}/deletes.txt"/>
		<!-- Zip Bundle with DB updates plus file deletes+additions -->
		<zip destfile="${dir.contentbox.exports}/contentbox-patch-nocoldbox-${contentbox.version}.zip" basedir="${dir.patches}/${contentbox.version}"></zip>
		
		<!-- ****************************************************************************************************** -->
		<!--  										BUILD CHECKSUMS 												-->
		<!-- ****************************************************************************************************** -->

		<!-- Build Checksums -->
		<checksum forceoverwrite="true" fileext=".md5">
			<fileset dir="${dir.contentbox.exports}">
				<include name="contentbox-patch-*.zip" />
			</fileset>
		</checksum>
		<checksum forceoverwrite="true" fileext=".sha512" algorithm="SHA-512">
			<fileset dir="${dir.contentbox.exports}">
				<include name="contentbox-patch-*.zip" />
			</fileset>
		</checksum>
		
    </target>
	
</project>